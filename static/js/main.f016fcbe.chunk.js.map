{"version":3,"sources":["components/WildfireTooltip/WildfireTooltip.js","components/CircleMap/CircleMap.js","components/SummaryBox/SummaryBox.js","components/WildfireMap/WildfireMap.js","components/FireCard/FireCard.js","components/FiresOfNote/FiresOfNote.js","components/WildfireTracker/WildfireTracker.js","components/App/App.js","serviceWorker.js","index.js"],"names":["WildfireTooltip","props","className","data","GEOGRAPHIC","FIRE_STATU","toLowerCase","replace","size","CURRENT_SI","toFixed","checkSize","ignition_date","text","FIRE_CAUSE","CircleMap","this","extent_calcuted","range","fire_size","forEach","d","push","parseFloat","Math","min","max","from","to","s","extent","getExtent","sort","a","b","Map","center","zoom","TileLayer","url","tiles","attribution","maxZoom","minZoom","map","radius","length","mapRange","log","classField","circleMarkerClassField","CircleMarker","key","FIRE_ID","LATITUDE","LONGITUDE","color","fillOpacity","stroke","weight","Tooltip","Component","SummaryBox","fire_stats","stats","out_fires","new_fires","held_fires","controlled_fires","hectares_burned","reduce","sum","item","km_burned","total_fires","last_update","ts","timestamp","Date","parseInt","month","month_num","getUTCMonth","toLocaleDateString","split","getUTCFullYear","toLocaleTimeString","returnCurrentTime","i","calculateFireStats","onClick","toggleFireTypeHandler","WildfireTracker","map_options","id","data_all","FireCard","fire","toString","console","fire_name","location","containment","discovered","cause","settings","autoplay","autoplaySpeed","centerMode","centerPadding","dots","draggable","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","FiresOfNote","fire_centers","card","fon","filter","ZONE","fireCenter","name","state","data_fon","bind","Axios","get","currentData","then","resp","fon_list","setupFiresOfNote","setState","all_fires","fonData","fires_of_note","fire_merged","mergeFireDetails","undefined","fire_class","data_array","fire_status","fires","fire_data","FIRE_NT_ID","fire_id","e","target","data_displayed","filterFireData","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f016fcbe.chunk.js","sourcesContent":["import React from 'react';\nimport './WildfireTooltip.css';\n\nconst WildfireTooltip = (props) => {\n\treturn(\n\t\t<div className=\"wf-tooltip\">\n\t\t\t<h3>{props.data.GEOGRAPHIC}</h3>\n\t\t\t<p className={`status ${props.data.FIRE_STATU.toLowerCase().replace(/\\s/g, '-')}`}>Status: {props.data.FIRE_STATU}</p>\n\t\t\t<p>{`A fire of ${checkSize(props)} square kilometres started on ${props.data.ignition_date}.`}</p>\n\n\t\t\t<p>Suspected cause: {formatFireCause(props.data.FIRE_CAUSE)}</p>\n\t\t</div>\n\t)\n};\n\nfunction checkSize(props) {\n\tlet size = (props.data.CURRENT_SI / 100).toFixed(2);\n\treturn size < 0.01 ? 'less than 0.01' : size;\n}\n\nfunction formatFireCause(text) {\n\treturn text === '' ? 'unknown' : text.toLowerCase();\n}\n\nexport default WildfireTooltip;","import React, { Component } from 'react';\nimport { CircleMarker, Map, TileLayer, Tooltip } from 'react-leaflet';\nimport WildfireTooltip from '../WildfireTooltip/WildfireTooltip';\n\nimport './CircleMap.css';\n\n\nexport class CircleMap extends Component {\n\tcomponentDidMount() {\n\t\tthis.extent_calcuted = false;\n\t\tthis.range = this.props.range ? this.props.range : [3,50];\n\t}\n\n\tgetExtent(data) {\n\t\tlet fire_size = [];\n\n\n\t\tdata.forEach(d => {\n\t\t\tfire_size.push(parseFloat(d.CURRENT_SI));\n\t\t});\n\t\treturn [Math.min(...fire_size), Math.max(...fire_size)];\n\t}\n\n\tmapRange(from, to, s) {\n\t\treturn to[0] + (s - from[0]) * (to[1] - to[0]) / (from[1] - from[0]);\n\t}\n\n\trender() {\n\t\t// we only want to calculate the extent once, otherwise the circle size changes when toggling by fire_type, which is confusing\n\t\tif (!this.extent_calcuted) {\n\t\t\tthis.extent = this.getExtent(this.props.data);\n\t\t\tthis.extent_calcuted = true;\n\t\t}\n\t\t\n\t\t// reorder array by CURRENT_SI, largest -> smallest\n\t\tthis.props.data.sort((a,b) => {\n\t\t\treturn b.CURRENT_SI - a.CURRENT_SI;\n\t\t});\n\n\t\treturn (\n\t\t\t<Map \n\t\t\t\tcenter={this.props.center} \n\t\t\t\tzoom={this.props.zoom}>\n\n\t\t\t\t<TileLayer url={this.props.tiles} \n\t\t\t\t\tattribution={this.props.attribution} \n\t\t\t\t\tmaxZoom={this.props.maxZoom}\n\t\t\t\t\tminZoom={this.props.minZoom}/>\n\t\t\t\t\n\t\t\t\t{this.props.data.map(d => {\n\t\t\t\t\tlet radius;\n\n\t\t\t\t\tif (this.props.data.length > 1) {\n\t\t\t\t\t\tradius = this.range ? this.mapRange(this.extent, this.range, d.CURRENT_SI) : 0\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tradius = this.props.radius;\n\t\t\t\t\t}\n\n\t\t\t\t\tradius = Math.log(radius) * 2.5;\n\t\t\t\t\t\n\t\t\t\t\tconst circleMarkerClass = d[this.props.circleMarkerClassField]? d[this.props.circleMarkerClassField] : 'fire-of-note';\n\t\t\t\t\tconst classField = circleMarkerClass.toLowerCase().replace(/\\s/g, '-');\n\n\t\t\t\t\treturn <CircleMarker key={d.FIRE_ID} \n\t\t\t\t\t\tcenter={[d.LATITUDE, d.LONGITUDE]} \n\t\t\t\t\t\tclassName={`circle-marker ${classField}`}\n\t\t\t\t\t\tcolor='#FFFFFF'\n\t\t\t\t\t\tfillOpacity='0.7'\n\t\t\t\t\t\tradius={radius}\n\t\t\t\t\t\tstroke={true}\n\t\t\t\t\t\tweight='0.5'>\n\t\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t\t<WildfireTooltip data={d}></WildfireTooltip>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</CircleMarker>\n\t\t\t\t})}\n\t\t\t</Map>\n\t\t);\n\t}\n}\n\n\nexport default CircleMap;","import React from 'react';\nimport './SummaryBox.css';\n\nconst SummaryBox = (props) => {\n\tconst fire_stats = calculateFireStats(props);\n\n\treturn (\n\t\t<div className=\"summary-box\" onClick={props.toggleFireTypeHandler}>\n\t\t\t<h2>Latest wildfire stats</h2>\n\t\n\t\t\t<div className=\"stat-box\">\n\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t<p className=\"big-num new\">{fire_stats.new_fires}</p>\n\t\t\t\t\t<p className=\"label\">New</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t<p className=\"big-num being-held\">{fire_stats.held_fires}</p>\n\t\t\t\t\t<p className=\"label\">Held</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t<p className=\"big-num under-control\">{fire_stats.controlled_fires}</p>\n\t\t\t\t\t<p className=\"label\">Controlled</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t<p className=\"big-num out\">{fire_stats.out_fires}</p>\n\t\t\t\t\t<p className=\"label\">Out</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"last-update\">Last updated: {fire_stats.last_update}</p>\n\t\t</div>\n\t);\n}\n\nfunction calculateFireStats(props) {\n\tconst data = props.data;\n\n\tlet stats = {\n\t\tout_fires: 0,\n\t\tnew_fires: 0,\n\t\theld_fires: 0,\n\t\tcontrolled_fires: 0\n\t}\n\n\tlet hectares_burned = data.reduce((sum, item) => {\n\t\treturn sum + parseFloat(item.CURRENT_SI);\n\t}, 0);\n\n\tstats.km_burned = (hectares_burned / 100).toFixed(0);\n\tstats.total_fires = data.length + 1;\n\n\tstats.last_update = data.length > 0 ? returnCurrentTime(data[0].last_update) : 'Not available';\n\n\tfor (let i = 0; i < props.data.length; ++i) {\n\t\tif (data[i].FIRE_STATU === 'New' | data[i].FIRE_STATU === 'Out of Control') {\n\t\t\tstats.new_fires++;\n\t\t} else if (data[i].FIRE_STATU === 'Being Held') {\n\t\t\tstats.held_fires++;\n\t\t} else if (data[i].FIRE_STATU === 'Under Control') {\n\t\t\tstats.controlled_fires++;\n\t\t} else {\n\t\t\tstats.out_fires++;\n\t\t}\n\t}\n\n\treturn stats;\n}\n\nfunction returnCurrentTime(ts) {\n\tconst timestamp = new Date(parseInt(ts));\n\tconst month = returnMonth(timestamp.getUTCMonth());\n\n\treturn `${month} ${timestamp.toLocaleDateString().split('/')[1]}, ${timestamp.getUTCFullYear()} at ${timestamp.toLocaleTimeString()}`\n}\n\nfunction returnMonth(month_num) {\n\tconst month_lookup = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n\treturn month_lookup[parseInt(month_num)];\n}\n\n\nexport default SummaryBox;\n","import React, { Component, Fragment } from 'react';\nimport CircleMap from '../CircleMap/CircleMap';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport './WildfireMap.css';\n\n\nexport class WildfireTracker extends Component {\n\tmap_options = {\n\t\tcenter: [54.184179, -125.652423],\n\t\tclassField: 'FIRE_STATU',\n\t\tmaxZoom: 8,\n\t\tminZoom: 3,\n\t\tzoom: 5\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h1>B.C. Wildfire Tracker</h1>\n\t\t\t\t<CircleMap id=\"mapview\"\n\t\t\t\t\tattribution={this.props.attribution}\n\t\t\t\t\tcenter={this.map_options.center}\n\t\t\t\t\tcircleMarkerClassField={this.map_options.classField}\n\t\t\t\t\tdata={this.props.data}\n\t\t\t\t\tmaxZoom={this.map_options.maxZoom}\n\t\t\t\t\tminZoom={this.map_options.minZoom}\n\t\t\t\t\ttiles={this.props.tiles}\n\t\t\t\t\tzoom={this.map_options.zoom}>\n\t\t\t\t</CircleMap>\n\t\t\t\t<SummaryBox\n\t\t\t\t\tdata={this.props.data_all}\n\t\t\t\t\ttoggleFireTypeHandler={this.props.toggleFireTypeHandler}>\n\t\t\t\t</SummaryBox>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default WildfireTracker;\n","import React from 'react';\nimport CircleMap from '../CircleMap/CircleMap';\n\nimport './FireCard.css';\n\nconst FireCard = (props) => {\n\tconst fire = props.data;\n\n\tconst map_options = {\n\t\tcenter: [fire.LATITUDE.toString(), fire.LONGITUDE.toString()],\n\t\tclassField: 'fire-of-note',\n\t\tmaxZoom: 8,\n\t\tminZoom: 4,\n\t\tradius: 10,\n\t\tzoom: 5\n\t};\n\n\tconsole.log()\n\n\treturn (\n\t\t<div className='fire-card'>\n\t\t\t<div className='row'>\n\t\t\t<div className='text'>\n\t\t\t\t<header>\n\t\t\t\t\t<h3>{fire.fire_name.split(' (')[0]}</h3>\n\t\t\t\t\t<p>{fire.location}</p>\n\t\t\t\t</header>\n\t\t\t\t<div className='status-box'>\n\t\t\t\t\t<div className='status-item'>\n\t\t\t\t\t\t<h2 className={`${fire.FIRE_STATU.replace(/\\s/g, '-').toLowerCase()} big-num`}>{fire.FIRE_STATU}</h2>\n\t\t\t\t\t\t<p className='label'>Status</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ fire.containment.length > 0 &&\n\t\t\t\t\t\t<div className='containment-item'>\n\t\t\t\t\t\t\t<h2 className='big-num'>fire.containment</h2>\n\t\t\t\t\t\t\t<p className='label'>Contained</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='stat-box'>\n\t\t\t\t\t<div className='stat'>\n\t\t\t\t\t\t<span className='started icon'></span>\n\t\t\t\t\t\t<p><strong>Started:</strong></p> \n\t\t\t\t\t\t<p className='started-date'>{`${fire.discovered.split('day, ')[1]}`}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat'>\n\t\t\t\t\t\t<span className='size icon'></span>\n\t\t\t\t\t\t<p><strong>Size:</strong></p> \n\t\t\t\t\t\t<p>{`${haToKm(fire.CURRENT_SI)} km square`}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat'>\n\t\t\t\t\t\t<span className='cause icon'></span>\n\t\t\t\t\t\t<p><strong>Cause:</strong></p> \n\t\t\t\t\t\t<p>{`${fire.cause}`}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<CircleMap id=\"fon-mapview\"\n\t\t\t\tattribution={props.attribution}\n\t\t\t\tcenter={map_options.center}\n\t\t\t\tcircleMarkerClassField={map_options.classField}\n\t\t\t\tdata={[fire]}\n\t\t\t\tmaxZoom={map_options.maxZoom}\n\t\t\t\tminZoom={map_options.minZoom}\n\t\t\t\tradius={map_options.radius}\n\t\t\t\trange={[5,5]}\n\t\t\t\ttiles={props.tiles}\n\t\t\t\tzoom={map_options.zoom}>\n\t\t\t</CircleMap>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n}\n// <p className=\"row\">{fire.status_details.split(' ,,')[0].split(',For')[0]}</p>\nfunction haToKm(number) {\n\tlet size = (number / 100).toFixed(2);\n\treturn size;\n}\n\nexport default FireCard;\n\n\n\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport FireCard from '../FireCard/FireCard';\nimport fire_centers from '../../data/fire-centers.json';\n\n// Import css files\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './FiresOfNote.css';\n\n// slider params\nconst settings = {\n\tautoplay: false,\n\tautoplaySpeed: 6000,\n\tcenterMode: true,\n\tcenterPadding: '25px',\n\tdots: true,\n\tdraggable: false,\n\tinfinite: true,\n\tlazyLoad: 'ondemand',\n\tspeed: 500,\n\tslidesToShow: 1,\n\tslidesToScroll: 1\n};\n\nconst FiresOfNote = (props) => {\n\treturn (\n\t\t<div className='fon'>\n\t\t\t<h1>Wildfires of Note</h1>\n\t\t\t<p>Wildfires of note are those which are highly visible or that pose a potential threat to public safety. The wildfires are grouped by B.C.’s regional fire centres.</p>\n\t\t\t<p>The province of B.C. is divided into six regional fire centres: Cariboo, Coastal, Kamloops, Northwest, Prince George and Southeast.</p>\n\t\t\t<Slider {...settings}>\n\t\t\t\t{\n\t\t\t\t\tfire_centers.map((d, i) => {\n\t\t\t\t\t\tlet card;\n\t\t\t\t\t\tconst fon = props.data.filter(fire => {\n\t\t\t\t\t\t\t// return fire.FIRE_CENTR === d.id;\n\t\t\t\t\t\t\treturn parseInt(fire.ZONE) === parseInt(d.id);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (fon.length > 0) {\n\t\t\t\t\t\t\tcard = (\n\t\t\t\t\t\t\t\t<FireCard className='fire-card' \n\t\t\t\t\t\t\t\t\tattribution={props.attribution}\n\t\t\t\t\t\t\t\t\t// data={props.data[i]}\n\t\t\t\t\t\t\t\t\tdata={fon[0]}\n\t\t\t\t\t\t\t\t\tfireCenter={d.id}\n\t\t\t\t\t\t\t\t\ttiles={props.tiles}>\n\t\t\t\t\t\t\t\t</FireCard>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcard = <p className=\"no-fires\">No fires of note</p>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className='fire-center' key={d.id}>\n\t\t\t\t\t\t\t\t<h2 className='fire-center'>{`${d.name} Fire Centre`}</h2>\n\t\t\t\t\t\t\t\t{card}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Slider>\n\t\t</div>\n\t);\n}\n\nexport default FiresOfNote;\n","import React, { Component, Fragment } from 'react';\nimport Axios from 'axios'\nimport WildfireMap from '../WildfireMap/WildfireMap';\nimport FiresOfNote from '../FiresOfNote/FiresOfNote';\n\nexport class WildfireTracker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggleFireTypeHandler = this.toggleFireTypeHandler.bind(this);\n\t}\n\n\tstate = {\n\t\tdata: [],\n\t\tdata_all: [],\n\t\tdata_fon: []\n\t}\n\n\tcomponentDidMount() {\n\t\tAxios.get(this.props.currentData)\n\t\t\t.then(resp => {\n\t\t\t\t// get a list of fires of note then go grab the data from the corresponding google sheet\n\t\t\t\t// const fon_list = resp.data.filter(d => d.FIRE_STATU === 'Fire of Note');\n\t\t\t\t// we don't always have fires of note\n\n\t\t\t\tconst fon_list = resp.data;\n\t\t\t\tif (fon_list.length > 0) this.setupFiresOfNote(fon_list);\n\t\t\t\t\n\n\t\t\t\t// update our state with the new data\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: resp.data,\n\t\t\t\t\tdata_all: resp.data\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tsetupFiresOfNote(data) {\n\t\tconst all_fires = data;\n\n\t\tAxios.get(this.props.fonData)\n\t\t\t.then(resp => {\n\t\t\t\tconst data = resp.data;\n\t\t\t\tlet fires_of_note = [];\n\n\t\t\t\t// loop through the object returned & push the FON data into an array\n\t\t\t\tfor (let fire in data) {\n\t\t\t\t\t// merge fon details with basic fire data\n\t\t\t\t\tconst fire_merged = this.mergeFireDetails(data[fire], all_fires);\n\n\t\t\t\t\tfires_of_note.push(fire_merged)\n\t\t\t\t}\n\n\t\t\t\t// update our state with the new data – not sure why but undefined pops up in the array sometimes then everything breaks.\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata_fon: fires_of_note.filter(fon => fon !== undefined)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tfilterFireData(fire_class) {\n\t\t// currently, 'new' & 'out-of-control' fires are listed as new. Not sure if this is ideal. \n\t\tif (fire_class === 'new') {\n\t\t\tlet data_array = [];\n\t\t\tthis.state.data_all.forEach(d => {\n\t\t\t\tconst fire_status = d.FIRE_STATU.replace(/\\s/g, '-').toLowerCase();\n\n\t\t\t\tif (fire_status === fire_class | fire_status === 'out-of-control') {\n\t\t\t\t\tdata_array.push(d);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn data_array;\n\t\t} else {\n\t\t\treturn this.state.data_all.filter(d => d.FIRE_STATU.replace(/\\s/g, '-').toLowerCase() === fire_class);\n\t\t}\n\t}\n\n\tmergeFireDetails(fon, fires) {\n\t\tlet fire_data;\n\n\t\tfires.forEach(d => {\n\t\t\tif (d.FIRE_NT_ID === fon.fire_id) {\n\t\t\t\tfire_data = {...fon, ...d};\n\t\t\t}\n\t\t});\n\n\t\treturn fire_data;\n\t}\n\n\ttoggleFireTypeHandler(e) {\n\t\tlet fire_data;\n\t\tlet fire_class = e.target.className.split(' ')[1];\n\n\t\tif (fire_class === this.state.data_displayed) {\n\t\t\tfire_data = this.state.data_all;\n\t\t\tfire_class = null;\n\t\t} else {\n\t\t\tfire_data = this.filterFireData(fire_class);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdata_displayed: fire_class,\n\t\t\tdata: fire_data\n\t\t});\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<WildfireMap \n\t\t\t\t\tattribution={this.props.attribution}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tdata_all={this.state.data_all}\n\t\t\t\t\ttiles={this.props.tiles}\n\t\t\t\t\ttoggleFireTypeHandler={this.toggleFireTypeHandler}>\n\t\t\t\t</WildfireMap>\n\n\t\t\t\t<FiresOfNote\n\t\t\t\t\tattribution={this.props.attribution}\n\t\t\t\t\tdata={this.state.data_fon}\n\t\t\t\t\ttiles={this.props.tiles}\n\t\t\t\t></FiresOfNote>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default WildfireTracker;","import React from 'react';\nimport WildfireTracker from '../WildfireTracker/WildfireTracker';\nimport './App.css';\n\n// Wildfires url\nconst currentFiresURL = 'https://storage.googleapis.com/wildfire_data/wildfires.json';\n// Fires of note\nconst firesOfNoteURL = 'https://storage.googleapis.com/wildfire_data/fon.json';\n\n// map tiles & attribution\nconst map_url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst attribution = '&copy;<a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\n\n\n\nfunction App() {\n\treturn (\n\t\t<WildfireTracker\n\t\t  \tfonData={firesOfNoteURL}\n\t\t\tcurrentData={currentFiresURL}\n\t\t\ttiles={map_url}\n\t\t\tattribution={attribution}>\n\t\t</WildfireTracker>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}